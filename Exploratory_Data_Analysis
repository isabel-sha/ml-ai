{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "source": [
        "# Mini Project: Exploratory Data Analysis"
      ],
      "metadata": {
        "id": "hVq3RjKJpJI0"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Exploratory Data Analysis: Unveiling Insights from the NYC Taxi Dataset\n",
        "\n",
        "Data has become the lifeblood of the modern world, permeating every aspect of our lives and transforming the way we make decisions. In this era of vast information, the ability to extract meaningful insights from raw data has emerged as a crucial skill. Enter exploratory data analysis (EDA), a powerful approach that allows us to unravel hidden patterns, detect anomalies, and generate valuable knowledge from the vast volumes of data at our disposal.\n",
        "\n",
        "Exploratory data analysis serves as the initial step in any data-driven investigation, offering a comprehensive understanding of the dataset's structure, distributions, and relationships between variables. By applying statistical and visual techniques, analysts gain a deeper insight into the data, paving the way for more accurate predictions, informed decision-making, and the discovery of actionable insights.\n",
        "\n",
        "To illustrate the significance of exploratory data analysis, we delve into one of the most popular and widely studied datasets in the fieldâ€”the [NYC Taxi Dataset](https://www.nyc.gov/site/tlc/about/tlc-trip-record-data.page). As the name suggests, this dataset captures detailed information about taxi trips within the bustling city of New York. The NYC Taxi Dataset is an ideal choice for learning and practicing EDA techniques due to its richness, complexity, and real-world applicability.\n",
        "\n",
        "The dataset encompasses a vast range of attributes, including pickup and drop-off locations, timestamps, trip durations, passenger counts, payment information, and much more. By exploring this data, we can gain valuable insights into the dynamics of taxi usage, understand travel patterns across different neighborhoods, identify peak hours of demand, analyze fare structures, and even uncover interesting anecdotes about the city's vibrant life.\n",
        "\n",
        "The NYC Taxi Dataset is an excellent resource for aspiring ML practitioners to develop their EDA skills. Its scale, complexity, and real-world relevance make it an engaging playground for uncovering hidden patterns, generating hypotheses, and forming data-driven narratives.\n",
        "\n",
        "In this mini project, we will dive deep into the NYC Taxi Dataset. We will leverage various EDA techniques to unveil meaningful insights, visualize data distributions, identify outliers, and pose insightful questions that will fuel further analysis and exploration. By the end of this colab, students will have a solid foundation in exploratory data analysis and be equipped to tackle real-world data challenges with confidence."
      ],
      "metadata": {
        "id": "ajb94WgIRdgC"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns"
      ],
      "metadata": {
        "id": "lbJFWLELlI6N"
      },
      "execution_count": 2,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "Load the NYC taxi dataset into a Pandas DataFrame and do a few basic checks to ensure the data is loaded properly. Note, there are several months of data that can be used. For simplicity, use the Yellow Taxi 2022-01 parquet file [here](https://d37ci6vzurychx.cloudfront.net/trip-data/yellow_tripdata_2022-01.parquet). Here are your tasks:\n",
        "\n",
        "  1. Load the `yellow_tripdata_2022-01.parquet` file into Pandas.\n",
        "  2. Print the first 5 rows of data. Study the schema and make sure you understand what each of the fields mean by referencing the [documentation](https://www.nyc.gov/assets/tlc/downloads/pdf/data_dictionary_trip_records_yellow.pdf).\n",
        "  3. How many rows are in the dataset? How many unique columns are in the dataset?\n",
        "  4. Which columns have NULL values and how many NULL values are present in each of these columns?\n",
        "  5. Generate summary statistics using Pandas' [describe method](https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.describe.html). Do you notice anything unusual in the dataset? Find at least one anomoly and try to come up with a hypothesis to explain it.  \n",
        "  6. Drop all rows with NULL values and store the result. We'll ignore NULL valued rows in this mini-project.\n"
      ],
      "metadata": {
        "id": "sgK6-XtjVnjj"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Load parquet file into a Pandas DataFrame\n",
        "df = pd.read_parquet(\"https://d37ci6vzurychx.cloudfront.net/trip-data/yellow_tripdata_2022-01.parquet\")\n",
        "df"
      ],
      "metadata": {
        "id": "db--eb8zlNNg",
        "outputId": "afd0d8e6-a4f8-45d0-ce1c-6528c968404d",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 444
        }
      },
      "execution_count": 3,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "         VendorID tpep_pickup_datetime tpep_dropoff_datetime  passenger_count  \\\n",
              "0               1  2022-01-01 00:35:40   2022-01-01 00:53:29              2.0   \n",
              "1               1  2022-01-01 00:33:43   2022-01-01 00:42:07              1.0   \n",
              "2               2  2022-01-01 00:53:21   2022-01-01 01:02:19              1.0   \n",
              "3               2  2022-01-01 00:25:21   2022-01-01 00:35:23              1.0   \n",
              "4               2  2022-01-01 00:36:48   2022-01-01 01:14:20              1.0   \n",
              "...           ...                  ...                   ...              ...   \n",
              "2463926         2  2022-01-31 23:36:53   2022-01-31 23:42:51              NaN   \n",
              "2463927         2  2022-01-31 23:44:22   2022-01-31 23:55:01              NaN   \n",
              "2463928         2  2022-01-31 23:39:00   2022-01-31 23:50:00              NaN   \n",
              "2463929         2  2022-01-31 23:36:42   2022-01-31 23:48:45              NaN   \n",
              "2463930         2  2022-01-31 23:46:00   2022-02-01 00:13:00              NaN   \n",
              "\n",
              "         trip_distance  RatecodeID store_and_fwd_flag  PULocationID  \\\n",
              "0                 3.80         1.0                  N           142   \n",
              "1                 2.10         1.0                  N           236   \n",
              "2                 0.97         1.0                  N           166   \n",
              "3                 1.09         1.0                  N           114   \n",
              "4                 4.30         1.0                  N            68   \n",
              "...                ...         ...                ...           ...   \n",
              "2463926           1.32         NaN               None            90   \n",
              "2463927           4.19         NaN               None           107   \n",
              "2463928           2.10         NaN               None           113   \n",
              "2463929           2.92         NaN               None           148   \n",
              "2463930           8.94         NaN               None           186   \n",
              "\n",
              "         DOLocationID  payment_type  fare_amount  extra  mta_tax  tip_amount  \\\n",
              "0                 236             1        14.50    3.0      0.5        3.65   \n",
              "1                  42             1         8.00    0.5      0.5        4.00   \n",
              "2                 166             1         7.50    0.5      0.5        1.76   \n",
              "3                  68             2         8.00    0.5      0.5        0.00   \n",
              "4                 163             1        23.50    0.5      0.5        3.00   \n",
              "...               ...           ...          ...    ...      ...         ...   \n",
              "2463926           170             0         8.00    0.0      0.5        2.39   \n",
              "2463927            75             0        16.80    0.0      0.5        4.35   \n",
              "2463928           246             0        11.22    0.0      0.5        2.00   \n",
              "2463929           164             0        12.40    0.0      0.5        0.00   \n",
              "2463930           181             0        25.48    0.0      0.5        6.28   \n",
              "\n",
              "         tolls_amount  improvement_surcharge  total_amount  \\\n",
              "0                 0.0                    0.3         21.95   \n",
              "1                 0.0                    0.3         13.30   \n",
              "2                 0.0                    0.3         10.56   \n",
              "3                 0.0                    0.3         11.80   \n",
              "4                 0.0                    0.3         30.30   \n",
              "...               ...                    ...           ...   \n",
              "2463926           0.0                    0.3         13.69   \n",
              "2463927           0.0                    0.3         24.45   \n",
              "2463928           0.0                    0.3         16.52   \n",
              "2463929           0.0                    0.3         15.70   \n",
              "2463930           0.0                    0.3         35.06   \n",
              "\n",
              "         congestion_surcharge  airport_fee  \n",
              "0                         2.5          0.0  \n",
              "1                         0.0          0.0  \n",
              "2                         0.0          0.0  \n",
              "3                         2.5          0.0  \n",
              "4                         2.5          0.0  \n",
              "...                       ...          ...  \n",
              "2463926                   NaN          NaN  \n",
              "2463927                   NaN          NaN  \n",
              "2463928                   NaN          NaN  \n",
              "2463929                   NaN          NaN  \n",
              "2463930                   NaN          NaN  \n",
              "\n",
              "[2463931 rows x 19 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-c88cfe08-90ab-4d00-9e02-f2b5f506872f\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>VendorID</th>\n",
              "      <th>tpep_pickup_datetime</th>\n",
              "      <th>tpep_dropoff_datetime</th>\n",
              "      <th>passenger_count</th>\n",
              "      <th>trip_distance</th>\n",
              "      <th>RatecodeID</th>\n",
              "      <th>store_and_fwd_flag</th>\n",
              "      <th>PULocationID</th>\n",
              "      <th>DOLocationID</th>\n",
              "      <th>payment_type</th>\n",
              "      <th>fare_amount</th>\n",
              "      <th>extra</th>\n",
              "      <th>mta_tax</th>\n",
              "      <th>tip_amount</th>\n",
              "      <th>tolls_amount</th>\n",
              "      <th>improvement_surcharge</th>\n",
              "      <th>total_amount</th>\n",
              "      <th>congestion_surcharge</th>\n",
              "      <th>airport_fee</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>2022-01-01 00:35:40</td>\n",
              "      <td>2022-01-01 00:53:29</td>\n",
              "      <td>2.0</td>\n",
              "      <td>3.80</td>\n",
              "      <td>1.0</td>\n",
              "      <td>N</td>\n",
              "      <td>142</td>\n",
              "      <td>236</td>\n",
              "      <td>1</td>\n",
              "      <td>14.50</td>\n",
              "      <td>3.0</td>\n",
              "      <td>0.5</td>\n",
              "      <td>3.65</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.3</td>\n",
              "      <td>21.95</td>\n",
              "      <td>2.5</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1</td>\n",
              "      <td>2022-01-01 00:33:43</td>\n",
              "      <td>2022-01-01 00:42:07</td>\n",
              "      <td>1.0</td>\n",
              "      <td>2.10</td>\n",
              "      <td>1.0</td>\n",
              "      <td>N</td>\n",
              "      <td>236</td>\n",
              "      <td>42</td>\n",
              "      <td>1</td>\n",
              "      <td>8.00</td>\n",
              "      <td>0.5</td>\n",
              "      <td>0.5</td>\n",
              "      <td>4.00</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.3</td>\n",
              "      <td>13.30</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2</td>\n",
              "      <td>2022-01-01 00:53:21</td>\n",
              "      <td>2022-01-01 01:02:19</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.97</td>\n",
              "      <td>1.0</td>\n",
              "      <td>N</td>\n",
              "      <td>166</td>\n",
              "      <td>166</td>\n",
              "      <td>1</td>\n",
              "      <td>7.50</td>\n",
              "      <td>0.5</td>\n",
              "      <td>0.5</td>\n",
              "      <td>1.76</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.3</td>\n",
              "      <td>10.56</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2</td>\n",
              "      <td>2022-01-01 00:25:21</td>\n",
              "      <td>2022-01-01 00:35:23</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.09</td>\n",
              "      <td>1.0</td>\n",
              "      <td>N</td>\n",
              "      <td>114</td>\n",
              "      <td>68</td>\n",
              "      <td>2</td>\n",
              "      <td>8.00</td>\n",
              "      <td>0.5</td>\n",
              "      <td>0.5</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.3</td>\n",
              "      <td>11.80</td>\n",
              "      <td>2.5</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2</td>\n",
              "      <td>2022-01-01 00:36:48</td>\n",
              "      <td>2022-01-01 01:14:20</td>\n",
              "      <td>1.0</td>\n",
              "      <td>4.30</td>\n",
              "      <td>1.0</td>\n",
              "      <td>N</td>\n",
              "      <td>68</td>\n",
              "      <td>163</td>\n",
              "      <td>1</td>\n",
              "      <td>23.50</td>\n",
              "      <td>0.5</td>\n",
              "      <td>0.5</td>\n",
              "      <td>3.00</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.3</td>\n",
              "      <td>30.30</td>\n",
              "      <td>2.5</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2463926</th>\n",
              "      <td>2</td>\n",
              "      <td>2022-01-31 23:36:53</td>\n",
              "      <td>2022-01-31 23:42:51</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.32</td>\n",
              "      <td>NaN</td>\n",
              "      <td>None</td>\n",
              "      <td>90</td>\n",
              "      <td>170</td>\n",
              "      <td>0</td>\n",
              "      <td>8.00</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.5</td>\n",
              "      <td>2.39</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.3</td>\n",
              "      <td>13.69</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2463927</th>\n",
              "      <td>2</td>\n",
              "      <td>2022-01-31 23:44:22</td>\n",
              "      <td>2022-01-31 23:55:01</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.19</td>\n",
              "      <td>NaN</td>\n",
              "      <td>None</td>\n",
              "      <td>107</td>\n",
              "      <td>75</td>\n",
              "      <td>0</td>\n",
              "      <td>16.80</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.5</td>\n",
              "      <td>4.35</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.3</td>\n",
              "      <td>24.45</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2463928</th>\n",
              "      <td>2</td>\n",
              "      <td>2022-01-31 23:39:00</td>\n",
              "      <td>2022-01-31 23:50:00</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.10</td>\n",
              "      <td>NaN</td>\n",
              "      <td>None</td>\n",
              "      <td>113</td>\n",
              "      <td>246</td>\n",
              "      <td>0</td>\n",
              "      <td>11.22</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.5</td>\n",
              "      <td>2.00</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.3</td>\n",
              "      <td>16.52</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2463929</th>\n",
              "      <td>2</td>\n",
              "      <td>2022-01-31 23:36:42</td>\n",
              "      <td>2022-01-31 23:48:45</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.92</td>\n",
              "      <td>NaN</td>\n",
              "      <td>None</td>\n",
              "      <td>148</td>\n",
              "      <td>164</td>\n",
              "      <td>0</td>\n",
              "      <td>12.40</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.5</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.3</td>\n",
              "      <td>15.70</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2463930</th>\n",
              "      <td>2</td>\n",
              "      <td>2022-01-31 23:46:00</td>\n",
              "      <td>2022-02-01 00:13:00</td>\n",
              "      <td>NaN</td>\n",
              "      <td>8.94</td>\n",
              "      <td>NaN</td>\n",
              "      <td>None</td>\n",
              "      <td>186</td>\n",
              "      <td>181</td>\n",
              "      <td>0</td>\n",
              "      <td>25.48</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.5</td>\n",
              "      <td>6.28</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.3</td>\n",
              "      <td>35.06</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>2463931 rows Ã— 19 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c88cfe08-90ab-4d00-9e02-f2b5f506872f')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-c88cfe08-90ab-4d00-9e02-f2b5f506872f button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-c88cfe08-90ab-4d00-9e02-f2b5f506872f');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-1f3e0407-0043-439b-a23e-a146549f8123\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-1f3e0407-0043-439b-a23e-a146549f8123')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-1f3e0407-0043-439b-a23e-a146549f8123 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "  <div id=\"id_a875edef-5476-4650-a23f-815d166b17cd\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_a875edef-5476-4650-a23f-815d166b17cd button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('df');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df"
            }
          },
          "metadata": {},
          "execution_count": 3
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.head()"
      ],
      "metadata": {
        "id": "TslBuHoXl_o1",
        "outputId": "7fb37362-05f0-4e56-d0e7-292e037fc268",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 226
        }
      },
      "execution_count": 4,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   VendorID tpep_pickup_datetime tpep_dropoff_datetime  passenger_count  \\\n",
              "0         1  2022-01-01 00:35:40   2022-01-01 00:53:29              2.0   \n",
              "1         1  2022-01-01 00:33:43   2022-01-01 00:42:07              1.0   \n",
              "2         2  2022-01-01 00:53:21   2022-01-01 01:02:19              1.0   \n",
              "3         2  2022-01-01 00:25:21   2022-01-01 00:35:23              1.0   \n",
              "4         2  2022-01-01 00:36:48   2022-01-01 01:14:20              1.0   \n",
              "\n",
              "   trip_distance  RatecodeID store_and_fwd_flag  PULocationID  DOLocationID  \\\n",
              "0           3.80         1.0                  N           142           236   \n",
              "1           2.10         1.0                  N           236            42   \n",
              "2           0.97         1.0                  N           166           166   \n",
              "3           1.09         1.0                  N           114            68   \n",
              "4           4.30         1.0                  N            68           163   \n",
              "\n",
              "   payment_type  fare_amount  extra  mta_tax  tip_amount  tolls_amount  \\\n",
              "0             1         14.5    3.0      0.5        3.65           0.0   \n",
              "1             1          8.0    0.5      0.5        4.00           0.0   \n",
              "2             1          7.5    0.5      0.5        1.76           0.0   \n",
              "3             2          8.0    0.5      0.5        0.00           0.0   \n",
              "4             1         23.5    0.5      0.5        3.00           0.0   \n",
              "\n",
              "   improvement_surcharge  total_amount  congestion_surcharge  airport_fee  \n",
              "0                    0.3         21.95                   2.5          0.0  \n",
              "1                    0.3         13.30                   0.0          0.0  \n",
              "2                    0.3         10.56                   0.0          0.0  \n",
              "3                    0.3         11.80                   2.5          0.0  \n",
              "4                    0.3         30.30                   2.5          0.0  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-00aece96-c0b1-4340-a403-7bdf78e2f2d8\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>VendorID</th>\n",
              "      <th>tpep_pickup_datetime</th>\n",
              "      <th>tpep_dropoff_datetime</th>\n",
              "      <th>passenger_count</th>\n",
              "      <th>trip_distance</th>\n",
              "      <th>RatecodeID</th>\n",
              "      <th>store_and_fwd_flag</th>\n",
              "      <th>PULocationID</th>\n",
              "      <th>DOLocationID</th>\n",
              "      <th>payment_type</th>\n",
              "      <th>fare_amount</th>\n",
              "      <th>extra</th>\n",
              "      <th>mta_tax</th>\n",
              "      <th>tip_amount</th>\n",
              "      <th>tolls_amount</th>\n",
              "      <th>improvement_surcharge</th>\n",
              "      <th>total_amount</th>\n",
              "      <th>congestion_surcharge</th>\n",
              "      <th>airport_fee</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>2022-01-01 00:35:40</td>\n",
              "      <td>2022-01-01 00:53:29</td>\n",
              "      <td>2.0</td>\n",
              "      <td>3.80</td>\n",
              "      <td>1.0</td>\n",
              "      <td>N</td>\n",
              "      <td>142</td>\n",
              "      <td>236</td>\n",
              "      <td>1</td>\n",
              "      <td>14.5</td>\n",
              "      <td>3.0</td>\n",
              "      <td>0.5</td>\n",
              "      <td>3.65</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.3</td>\n",
              "      <td>21.95</td>\n",
              "      <td>2.5</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1</td>\n",
              "      <td>2022-01-01 00:33:43</td>\n",
              "      <td>2022-01-01 00:42:07</td>\n",
              "      <td>1.0</td>\n",
              "      <td>2.10</td>\n",
              "      <td>1.0</td>\n",
              "      <td>N</td>\n",
              "      <td>236</td>\n",
              "      <td>42</td>\n",
              "      <td>1</td>\n",
              "      <td>8.0</td>\n",
              "      <td>0.5</td>\n",
              "      <td>0.5</td>\n",
              "      <td>4.00</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.3</td>\n",
              "      <td>13.30</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2</td>\n",
              "      <td>2022-01-01 00:53:21</td>\n",
              "      <td>2022-01-01 01:02:19</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.97</td>\n",
              "      <td>1.0</td>\n",
              "      <td>N</td>\n",
              "      <td>166</td>\n",
              "      <td>166</td>\n",
              "      <td>1</td>\n",
              "      <td>7.5</td>\n",
              "      <td>0.5</td>\n",
              "      <td>0.5</td>\n",
              "      <td>1.76</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.3</td>\n",
              "      <td>10.56</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2</td>\n",
              "      <td>2022-01-01 00:25:21</td>\n",
              "      <td>2022-01-01 00:35:23</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.09</td>\n",
              "      <td>1.0</td>\n",
              "      <td>N</td>\n",
              "      <td>114</td>\n",
              "      <td>68</td>\n",
              "      <td>2</td>\n",
              "      <td>8.0</td>\n",
              "      <td>0.5</td>\n",
              "      <td>0.5</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.3</td>\n",
              "      <td>11.80</td>\n",
              "      <td>2.5</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2</td>\n",
              "      <td>2022-01-01 00:36:48</td>\n",
              "      <td>2022-01-01 01:14:20</td>\n",
              "      <td>1.0</td>\n",
              "      <td>4.30</td>\n",
              "      <td>1.0</td>\n",
              "      <td>N</td>\n",
              "      <td>68</td>\n",
              "      <td>163</td>\n",
              "      <td>1</td>\n",
              "      <td>23.5</td>\n",
              "      <td>0.5</td>\n",
              "      <td>0.5</td>\n",
              "      <td>3.00</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.3</td>\n",
              "      <td>30.30</td>\n",
              "      <td>2.5</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-00aece96-c0b1-4340-a403-7bdf78e2f2d8')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-00aece96-c0b1-4340-a403-7bdf78e2f2d8 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-00aece96-c0b1-4340-a403-7bdf78e2f2d8');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-e65fd449-8a91-4358-9baa-20321b709222\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e65fd449-8a91-4358-9baa-20321b709222')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-e65fd449-8a91-4358-9baa-20321b709222 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df"
            }
          },
          "metadata": {},
          "execution_count": 4
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Display the shape of the dataset\n",
        "print(df.shape)\n",
        "num_rows = df.shape[0]\n",
        "num_columns = len(df.columns)\n",
        "print(f\"Number of rows in the dataset: {num_rows}\")\n",
        "print(f\"Number of unique columns in the dataset: {num_columns}\")"
      ],
      "metadata": {
        "id": "jkQN2lBymKH-",
        "outputId": "910969b8-4f0d-4b77-b084-7c70622394d5",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": 5,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "(2463931, 19)\n",
            "Number of rows in the dataset: 2463931\n",
            "Number of unique columns in the dataset: 19\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Check for missing values\n",
        "df.isnull().sum()"
      ],
      "metadata": {
        "id": "N8JeOtV5mQJ7",
        "outputId": "86ed2963-795b-4f41-b9d2-7693bc1ed80d",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 680
        }
      },
      "execution_count": 6,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "VendorID                     0\n",
              "tpep_pickup_datetime         0\n",
              "tpep_dropoff_datetime        0\n",
              "passenger_count          71503\n",
              "trip_distance                0\n",
              "RatecodeID               71503\n",
              "store_and_fwd_flag       71503\n",
              "PULocationID                 0\n",
              "DOLocationID                 0\n",
              "payment_type                 0\n",
              "fare_amount                  0\n",
              "extra                        0\n",
              "mta_tax                      0\n",
              "tip_amount                   0\n",
              "tolls_amount                 0\n",
              "improvement_surcharge        0\n",
              "total_amount                 0\n",
              "congestion_surcharge     71503\n",
              "airport_fee              71503\n",
              "dtype: int64"
            ],
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>0</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>VendorID</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>tpep_pickup_datetime</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>tpep_dropoff_datetime</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>passenger_count</th>\n",
              "      <td>71503</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>trip_distance</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>RatecodeID</th>\n",
              "      <td>71503</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>store_and_fwd_flag</th>\n",
              "      <td>71503</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>PULocationID</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>DOLocationID</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>payment_type</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>fare_amount</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>extra</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mta_tax</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>tip_amount</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>tolls_amount</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>improvement_surcharge</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>total_amount</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>congestion_surcharge</th>\n",
              "      <td>71503</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>airport_fee</th>\n",
              "      <td>71503</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div><br><label><b>dtype:</b> int64</label>"
            ]
          },
          "metadata": {},
          "execution_count": 6
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Summary statistics of the dataset\n",
        "print(df.describe())\n",
        "print(\"There are some variables that show a negative amount such as the min for fare_amount, tip_amount, and total_amount. This could be due to an error or a refund for the taxi ride.\")"
      ],
      "metadata": {
        "id": "h9q5SOrql5mS",
        "outputId": "c9e247cf-73f0-456a-a9dd-2253a29ba7b7",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "           VendorID        tpep_pickup_datetime       tpep_dropoff_datetime  \\\n",
            "count  2.463931e+06                     2463931                     2463931   \n",
            "mean   1.707819e+00  2022-01-17 01:19:51.689724  2022-01-17 01:34:04.421902   \n",
            "min    1.000000e+00         2008-12-31 22:23:09         2008-12-31 23:06:56   \n",
            "25%    1.000000e+00         2022-01-09 15:37:41  2022-01-09 15:50:50.500000   \n",
            "50%    2.000000e+00         2022-01-17 12:11:45         2022-01-17 12:23:49   \n",
            "75%    2.000000e+00  2022-01-24 13:49:37.500000         2022-01-24 14:02:51   \n",
            "max    6.000000e+00         2022-05-18 20:41:57         2022-05-18 20:47:45   \n",
            "std    5.021375e-01                         NaN                         NaN   \n",
            "\n",
            "       passenger_count  trip_distance    RatecodeID  PULocationID  \\\n",
            "count     2.392428e+06   2.463931e+06  2.392428e+06  2.463931e+06   \n",
            "mean      1.389453e+00   5.372751e+00  1.415507e+00  1.660768e+02   \n",
            "min       0.000000e+00   0.000000e+00  1.000000e+00  1.000000e+00   \n",
            "25%       1.000000e+00   1.040000e+00  1.000000e+00  1.320000e+02   \n",
            "50%       1.000000e+00   1.740000e+00  1.000000e+00  1.620000e+02   \n",
            "75%       1.000000e+00   3.130000e+00  1.000000e+00  2.340000e+02   \n",
            "max       9.000000e+00   3.061593e+05  9.900000e+01  2.650000e+02   \n",
            "std       9.829686e-01   5.478714e+02  5.917573e+00  6.546806e+01   \n",
            "\n",
            "       DOLocationID  payment_type   fare_amount         extra       mta_tax  \\\n",
            "count  2.463931e+06  2.463931e+06  2.463931e+06  2.463931e+06  2.463931e+06   \n",
            "mean   1.635807e+02  1.194449e+00  1.294648e+01  1.006710e+00  4.914539e-01   \n",
            "min    1.000000e+00  0.000000e+00 -4.800000e+02 -4.500000e+00 -5.000000e-01   \n",
            "25%    1.130000e+02  1.000000e+00  6.500000e+00  0.000000e+00  5.000000e-01   \n",
            "50%    1.620000e+02  1.000000e+00  9.000000e+00  5.000000e-01  5.000000e-01   \n",
            "75%    2.360000e+02  1.000000e+00  1.400000e+01  2.500000e+00  5.000000e-01   \n",
            "max    2.650000e+02  5.000000e+00  4.010923e+05  3.350000e+01  1.659000e+01   \n",
            "std    7.079016e+01  5.001778e-01  2.558149e+02  1.236226e+00  8.291560e-02   \n",
            "\n",
            "         tip_amount  tolls_amount  improvement_surcharge  total_amount  \\\n",
            "count  2.463931e+06  2.463931e+06           2.463931e+06  2.463931e+06   \n",
            "mean   2.385696e+00  3.749773e-01           2.967234e-01  1.916937e+01   \n",
            "min   -1.252200e+02 -3.140000e+01          -3.000000e-01 -4.803000e+02   \n",
            "25%    7.200000e-01  0.000000e+00           3.000000e-01  1.130000e+01   \n",
            "50%    2.000000e+00  0.000000e+00           3.000000e-01  1.469000e+01   \n",
            "75%    3.000000e+00  0.000000e+00           3.000000e-01  2.002000e+01   \n",
            "max    8.888800e+02  1.933000e+02           3.000000e-01  4.010956e+05   \n",
            "std    2.830698e+00  1.680538e+00           4.374741e-02  2.559641e+02   \n",
            "\n",
            "       congestion_surcharge   airport_fee  \n",
            "count          2.392428e+06  2.392428e+06  \n",
            "mean           2.282322e+00  8.249935e-02  \n",
            "min           -2.500000e+00 -1.250000e+00  \n",
            "25%            2.500000e+00  0.000000e+00  \n",
            "50%            2.500000e+00  0.000000e+00  \n",
            "75%            2.500000e+00  0.000000e+00  \n",
            "max            2.500000e+00  1.250000e+00  \n",
            "std            7.432040e-01  3.125554e-01  \n",
            "There are some variables that show a negative amount such as the min for fare_amount, tip_amount, and total_amount. This could be due to an error or a refund for the taxi ride.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Drop rows with missing values.\n",
        "df.dropna(how=\"any\")"
      ],
      "metadata": {
        "id": "VP3EWMIEo4sp",
        "outputId": "c7be6439-07b6-499e-ddcc-b641a6aa4811",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 444
        }
      },
      "execution_count": 8,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "         VendorID tpep_pickup_datetime tpep_dropoff_datetime  passenger_count  \\\n",
              "0               1  2022-01-01 00:35:40   2022-01-01 00:53:29              2.0   \n",
              "1               1  2022-01-01 00:33:43   2022-01-01 00:42:07              1.0   \n",
              "2               2  2022-01-01 00:53:21   2022-01-01 01:02:19              1.0   \n",
              "3               2  2022-01-01 00:25:21   2022-01-01 00:35:23              1.0   \n",
              "4               2  2022-01-01 00:36:48   2022-01-01 01:14:20              1.0   \n",
              "...           ...                  ...                   ...              ...   \n",
              "2392423         1  2022-01-31 23:24:28   2022-01-31 23:32:47              1.0   \n",
              "2392424         2  2022-01-31 23:17:44   2022-01-31 23:22:05              1.0   \n",
              "2392425         2  2022-01-31 23:26:41   2022-01-31 23:34:54              1.0   \n",
              "2392426         2  2022-01-31 23:37:41   2022-01-31 23:45:26              1.0   \n",
              "2392427         2  2022-01-31 23:43:22   2022-01-31 23:55:36              1.0   \n",
              "\n",
              "         trip_distance  RatecodeID store_and_fwd_flag  PULocationID  \\\n",
              "0                 3.80         1.0                  N           142   \n",
              "1                 2.10         1.0                  N           236   \n",
              "2                 0.97         1.0                  N           166   \n",
              "3                 1.09         1.0                  N           114   \n",
              "4                 4.30         1.0                  N            68   \n",
              "...                ...         ...                ...           ...   \n",
              "2392423           1.50         1.0                  N           163   \n",
              "2392424           1.02         1.0                  N           249   \n",
              "2392425           1.53         1.0                  N            68   \n",
              "2392426           1.59         1.0                  N            90   \n",
              "2392427           4.04         1.0                  N           140   \n",
              "\n",
              "         DOLocationID  payment_type  fare_amount  extra  mta_tax  tip_amount  \\\n",
              "0                 236             1         14.5    3.0      0.5        3.65   \n",
              "1                  42             1          8.0    0.5      0.5        4.00   \n",
              "2                 166             1          7.5    0.5      0.5        1.76   \n",
              "3                  68             2          8.0    0.5      0.5        0.00   \n",
              "4                 163             1         23.5    0.5      0.5        3.00   \n",
              "...               ...           ...          ...    ...      ...         ...   \n",
              "2392423           143             2          7.5    3.0      0.5        0.00   \n",
              "2392424            68             1          5.5    0.5      0.5        1.86   \n",
              "2392425            90             1          8.0    0.5      0.5        2.95   \n",
              "2392426            79             1          7.5    0.5      0.5        2.26   \n",
              "2392427            24             1         13.5    0.5      0.5        3.46   \n",
              "\n",
              "         tolls_amount  improvement_surcharge  total_amount  \\\n",
              "0                 0.0                    0.3         21.95   \n",
              "1                 0.0                    0.3         13.30   \n",
              "2                 0.0                    0.3         10.56   \n",
              "3                 0.0                    0.3         11.80   \n",
              "4                 0.0                    0.3         30.30   \n",
              "...               ...                    ...           ...   \n",
              "2392423           0.0                    0.3         11.30   \n",
              "2392424           0.0                    0.3         11.16   \n",
              "2392425           0.0                    0.3         14.75   \n",
              "2392426           0.0                    0.3         13.56   \n",
              "2392427           0.0                    0.3         20.76   \n",
              "\n",
              "         congestion_surcharge  airport_fee  \n",
              "0                         2.5          0.0  \n",
              "1                         0.0          0.0  \n",
              "2                         0.0          0.0  \n",
              "3                         2.5          0.0  \n",
              "4                         2.5          0.0  \n",
              "...                       ...          ...  \n",
              "2392423                   2.5          0.0  \n",
              "2392424                   2.5          0.0  \n",
              "2392425                   2.5          0.0  \n",
              "2392426                   2.5          0.0  \n",
              "2392427                   2.5          0.0  \n",
              "\n",
              "[2392428 rows x 19 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-d02aadd0-7353-4251-8cc8-c5fdf25bca0c\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>VendorID</th>\n",
              "      <th>tpep_pickup_datetime</th>\n",
              "      <th>tpep_dropoff_datetime</th>\n",
              "      <th>passenger_count</th>\n",
              "      <th>trip_distance</th>\n",
              "      <th>RatecodeID</th>\n",
              "      <th>store_and_fwd_flag</th>\n",
              "      <th>PULocationID</th>\n",
              "      <th>DOLocationID</th>\n",
              "      <th>payment_type</th>\n",
              "      <th>fare_amount</th>\n",
              "      <th>extra</th>\n",
              "      <th>mta_tax</th>\n",
              "      <th>tip_amount</th>\n",
              "      <th>tolls_amount</th>\n",
              "      <th>improvement_surcharge</th>\n",
              "      <th>total_amount</th>\n",
              "      <th>congestion_surcharge</th>\n",
              "      <th>airport_fee</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>2022-01-01 00:35:40</td>\n",
              "      <td>2022-01-01 00:53:29</td>\n",
              "      <td>2.0</td>\n",
              "      <td>3.80</td>\n",
              "      <td>1.0</td>\n",
              "      <td>N</td>\n",
              "      <td>142</td>\n",
              "      <td>236</td>\n",
              "      <td>1</td>\n",
              "      <td>14.5</td>\n",
              "      <td>3.0</td>\n",
              "      <td>0.5</td>\n",
              "      <td>3.65</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.3</td>\n",
              "      <td>21.95</td>\n",
              "      <td>2.5</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1</td>\n",
              "      <td>2022-01-01 00:33:43</td>\n",
              "      <td>2022-01-01 00:42:07</td>\n",
              "      <td>1.0</td>\n",
              "      <td>2.10</td>\n",
              "      <td>1.0</td>\n",
              "      <td>N</td>\n",
              "      <td>236</td>\n",
              "      <td>42</td>\n",
              "      <td>1</td>\n",
              "      <td>8.0</td>\n",
              "      <td>0.5</td>\n",
              "      <td>0.5</td>\n",
              "      <td>4.00</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.3</td>\n",
              "      <td>13.30</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2</td>\n",
              "      <td>2022-01-01 00:53:21</td>\n",
              "      <td>2022-01-01 01:02:19</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.97</td>\n",
              "      <td>1.0</td>\n",
              "      <td>N</td>\n",
              "      <td>166</td>\n",
              "      <td>166</td>\n",
              "      <td>1</td>\n",
              "      <td>7.5</td>\n",
              "      <td>0.5</td>\n",
              "      <td>0.5</td>\n",
              "      <td>1.76</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.3</td>\n",
              "      <td>10.56</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2</td>\n",
              "      <td>2022-01-01 00:25:21</td>\n",
              "      <td>2022-01-01 00:35:23</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.09</td>\n",
              "      <td>1.0</td>\n",
              "      <td>N</td>\n",
              "      <td>114</td>\n",
              "      <td>68</td>\n",
              "      <td>2</td>\n",
              "      <td>8.0</td>\n",
              "      <td>0.5</td>\n",
              "      <td>0.5</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.3</td>\n",
              "      <td>11.80</td>\n",
              "      <td>2.5</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2</td>\n",
              "      <td>2022-01-01 00:36:48</td>\n",
              "      <td>2022-01-01 01:14:20</td>\n",
              "      <td>1.0</td>\n",
              "      <td>4.30</td>\n",
              "      <td>1.0</td>\n",
              "      <td>N</td>\n",
              "      <td>68</td>\n",
              "      <td>163</td>\n",
              "      <td>1</td>\n",
              "      <td>23.5</td>\n",
              "      <td>0.5</td>\n",
              "      <td>0.5</td>\n",
              "      <td>3.00</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.3</td>\n",
              "      <td>30.30</td>\n",
              "      <td>2.5</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2392423</th>\n",
              "      <td>1</td>\n",
              "      <td>2022-01-31 23:24:28</td>\n",
              "      <td>2022-01-31 23:32:47</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.50</td>\n",
              "      <td>1.0</td>\n",
              "      <td>N</td>\n",
              "      <td>163</td>\n",
              "      <td>143</td>\n",
              "      <td>2</td>\n",
              "      <td>7.5</td>\n",
              "      <td>3.0</td>\n",
              "      <td>0.5</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.3</td>\n",
              "      <td>11.30</td>\n",
              "      <td>2.5</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2392424</th>\n",
              "      <td>2</td>\n",
              "      <td>2022-01-31 23:17:44</td>\n",
              "      <td>2022-01-31 23:22:05</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.02</td>\n",
              "      <td>1.0</td>\n",
              "      <td>N</td>\n",
              "      <td>249</td>\n",
              "      <td>68</td>\n",
              "      <td>1</td>\n",
              "      <td>5.5</td>\n",
              "      <td>0.5</td>\n",
              "      <td>0.5</td>\n",
              "      <td>1.86</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.3</td>\n",
              "      <td>11.16</td>\n",
              "      <td>2.5</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2392425</th>\n",
              "      <td>2</td>\n",
              "      <td>2022-01-31 23:26:41</td>\n",
              "      <td>2022-01-31 23:34:54</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.53</td>\n",
              "      <td>1.0</td>\n",
              "      <td>N</td>\n",
              "      <td>68</td>\n",
              "      <td>90</td>\n",
              "      <td>1</td>\n",
              "      <td>8.0</td>\n",
              "      <td>0.5</td>\n",
              "      <td>0.5</td>\n",
              "      <td>2.95</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.3</td>\n",
              "      <td>14.75</td>\n",
              "      <td>2.5</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2392426</th>\n",
              "      <td>2</td>\n",
              "      <td>2022-01-31 23:37:41</td>\n",
              "      <td>2022-01-31 23:45:26</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.59</td>\n",
              "      <td>1.0</td>\n",
              "      <td>N</td>\n",
              "      <td>90</td>\n",
              "      <td>79</td>\n",
              "      <td>1</td>\n",
              "      <td>7.5</td>\n",
              "      <td>0.5</td>\n",
              "      <td>0.5</td>\n",
              "      <td>2.26</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.3</td>\n",
              "      <td>13.56</td>\n",
              "      <td>2.5</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2392427</th>\n",
              "      <td>2</td>\n",
              "      <td>2022-01-31 23:43:22</td>\n",
              "      <td>2022-01-31 23:55:36</td>\n",
              "      <td>1.0</td>\n",
              "      <td>4.04</td>\n",
              "      <td>1.0</td>\n",
              "      <td>N</td>\n",
              "      <td>140</td>\n",
              "      <td>24</td>\n",
              "      <td>1</td>\n",
              "      <td>13.5</td>\n",
              "      <td>0.5</td>\n",
              "      <td>0.5</td>\n",
              "      <td>3.46</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.3</td>\n",
              "      <td>20.76</td>\n",
              "      <td>2.5</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>2392428 rows Ã— 19 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d02aadd0-7353-4251-8cc8-c5fdf25bca0c')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-d02aadd0-7353-4251-8cc8-c5fdf25bca0c button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-d02aadd0-7353-4251-8cc8-c5fdf25bca0c');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-1d744b5e-f6cd-414a-95b3-a6c7b9d6eb17\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-1d744b5e-f6cd-414a-95b3-a6c7b9d6eb17')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-1d744b5e-f6cd-414a-95b3-a6c7b9d6eb17 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe"
            }
          },
          "metadata": {},
          "execution_count": 8
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Feature engineering is a critical process in machine learning that involves selecting, transforming, and creating features from raw data to improve the performance and accuracy of predictive models. While machine learning algorithms have the capability to automatically learn patterns from data, the quality and relevance of the features used as inputs greatly influence the model's ability to generalize and make accurate predictions. Feature engineering, therefore, plays a crucial role in extracting meaningful information and representing it in a format that best captures the underlying relationships within the data.\n",
        "\n",
        "Here are your tasks:\n",
        "\n",
        "  1. Create a new feature that calculates the trip duration in minutes.\n",
        "  2. Create additional features for the pick-up day of week and pick-up hour.\n",
        "  3. Use the Seaborn library to create a [line plot](https://seaborn.pydata.org/generated/seaborn.lineplot.html) depicting the number of trips as a function of the hour of day. What's the busiest time of day?\n",
        "  4. Create another lineplot depicting the number of trips as a function of the day of week. What day of the week is the least busy?"
      ],
      "metadata": {
        "id": "u2i5l3QNFAf3"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Create a new column for trip duration in minutes\n",
        "df[\"duration\"] = (df[\"tpep_dropoff_datetime\"]-df[\"tpep_pickup_datetime\"]).dt.total_seconds() / 60\n",
        "df"
      ],
      "metadata": {
        "id": "Wef2rR1Npl8f",
        "outputId": "93149e18-5916-4c54-dd54-de1d8f86283f",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 444
        }
      },
      "execution_count": 9,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "         VendorID tpep_pickup_datetime tpep_dropoff_datetime  passenger_count  \\\n",
              "0               1  2022-01-01 00:35:40   2022-01-01 00:53:29              2.0   \n",
              "1               1  2022-01-01 00:33:43   2022-01-01 00:42:07              1.0   \n",
              "2               2  2022-01-01 00:53:21   2022-01-01 01:02:19              1.0   \n",
              "3               2  2022-01-01 00:25:21   2022-01-01 00:35:23              1.0   \n",
              "4               2  2022-01-01 00:36:48   2022-01-01 01:14:20              1.0   \n",
              "...           ...                  ...                   ...              ...   \n",
              "2463926         2  2022-01-31 23:36:53   2022-01-31 23:42:51              NaN   \n",
              "2463927         2  2022-01-31 23:44:22   2022-01-31 23:55:01              NaN   \n",
              "2463928         2  2022-01-31 23:39:00   2022-01-31 23:50:00              NaN   \n",
              "2463929         2  2022-01-31 23:36:42   2022-01-31 23:48:45              NaN   \n",
              "2463930         2  2022-01-31 23:46:00   2022-02-01 00:13:00              NaN   \n",
              "\n",
              "         trip_distance  RatecodeID store_and_fwd_flag  PULocationID  \\\n",
              "0                 3.80         1.0                  N           142   \n",
              "1                 2.10         1.0                  N           236   \n",
              "2                 0.97         1.0                  N           166   \n",
              "3                 1.09         1.0                  N           114   \n",
              "4                 4.30         1.0                  N            68   \n",
              "...                ...         ...                ...           ...   \n",
              "2463926           1.32         NaN               None            90   \n",
              "2463927           4.19         NaN               None           107   \n",
              "2463928           2.10         NaN               None           113   \n",
              "2463929           2.92         NaN               None           148   \n",
              "2463930           8.94         NaN               None           186   \n",
              "\n",
              "         DOLocationID  payment_type  fare_amount  extra  mta_tax  tip_amount  \\\n",
              "0                 236             1        14.50    3.0      0.5        3.65   \n",
              "1                  42             1         8.00    0.5      0.5        4.00   \n",
              "2                 166             1         7.50    0.5      0.5        1.76   \n",
              "3                  68             2         8.00    0.5      0.5        0.00   \n",
              "4                 163             1        23.50    0.5      0.5        3.00   \n",
              "...               ...           ...          ...    ...      ...         ...   \n",
              "2463926           170             0         8.00    0.0      0.5        2.39   \n",
              "2463927            75             0        16.80    0.0      0.5        4.35   \n",
              "2463928           246             0        11.22    0.0      0.5        2.00   \n",
              "2463929           164             0        12.40    0.0      0.5        0.00   \n",
              "2463930           181             0        25.48    0.0      0.5        6.28   \n",
              "\n",
              "         tolls_amount  improvement_surcharge  total_amount  \\\n",
              "0                 0.0                    0.3         21.95   \n",
              "1                 0.0                    0.3         13.30   \n",
              "2                 0.0                    0.3         10.56   \n",
              "3                 0.0                    0.3         11.80   \n",
              "4                 0.0                    0.3         30.30   \n",
              "...               ...                    ...           ...   \n",
              "2463926           0.0                    0.3         13.69   \n",
              "2463927           0.0                    0.3         24.45   \n",
              "2463928           0.0                    0.3         16.52   \n",
              "2463929           0.0                    0.3         15.70   \n",
              "2463930           0.0                    0.3         35.06   \n",
              "\n",
              "         congestion_surcharge  airport_fee   duration  \n",
              "0                         2.5          0.0  17.816667  \n",
              "1                         0.0          0.0   8.400000  \n",
              "2                         0.0          0.0   8.966667  \n",
              "3                         2.5          0.0  10.033333  \n",
              "4                         2.5          0.0  37.533333  \n",
              "...                       ...          ...        ...  \n",
              "2463926                   NaN          NaN   5.966667  \n",
              "2463927                   NaN          NaN  10.650000  \n",
              "2463928                   NaN          NaN  11.000000  \n",
              "2463929                   NaN          NaN  12.050000  \n",
              "2463930                   NaN          NaN  27.000000  \n",
              "\n",
              "[2463931 rows x 20 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-a8bccc18-3932-434a-8fc7-fa7f9e95e674\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>VendorID</th>\n",
              "      <th>tpep_pickup_datetime</th>\n",
              "      <th>tpep_dropoff_datetime</th>\n",
              "      <th>passenger_count</th>\n",
              "      <th>trip_distance</th>\n",
              "      <th>RatecodeID</th>\n",
              "      <th>store_and_fwd_flag</th>\n",
              "      <th>PULocationID</th>\n",
              "      <th>DOLocationID</th>\n",
              "      <th>payment_type</th>\n",
              "      <th>fare_amount</th>\n",
              "      <th>extra</th>\n",
              "      <th>mta_tax</th>\n",
              "      <th>tip_amount</th>\n",
              "      <th>tolls_amount</th>\n",
              "      <th>improvement_surcharge</th>\n",
              "      <th>total_amount</th>\n",
              "      <th>congestion_surcharge</th>\n",
              "      <th>airport_fee</th>\n",
              "      <th>duration</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>2022-01-01 00:35:40</td>\n",
              "      <td>2022-01-01 00:53:29</td>\n",
              "      <td>2.0</td>\n",
              "      <td>3.80</td>\n",
              "      <td>1.0</td>\n",
              "      <td>N</td>\n",
              "      <td>142</td>\n",
              "      <td>236</td>\n",
              "      <td>1</td>\n",
              "      <td>14.50</td>\n",
              "      <td>3.0</td>\n",
              "      <td>0.5</td>\n",
              "      <td>3.65</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.3</td>\n",
              "      <td>21.95</td>\n",
              "      <td>2.5</td>\n",
              "      <td>0.0</td>\n",
              "      <td>17.816667</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1</td>\n",
              "      <td>2022-01-01 00:33:43</td>\n",
              "      <td>2022-01-01 00:42:07</td>\n",
              "      <td>1.0</td>\n",
              "      <td>2.10</td>\n",
              "      <td>1.0</td>\n",
              "      <td>N</td>\n",
              "      <td>236</td>\n",
              "      <td>42</td>\n",
              "      <td>1</td>\n",
              "      <td>8.00</td>\n",
              "      <td>0.5</td>\n",
              "      <td>0.5</td>\n",
              "      <td>4.00</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.3</td>\n",
              "      <td>13.30</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>8.400000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2</td>\n",
              "      <td>2022-01-01 00:53:21</td>\n",
              "      <td>2022-01-01 01:02:19</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.97</td>\n",
              "      <td>1.0</td>\n",
              "      <td>N</td>\n",
              "      <td>166</td>\n",
              "      <td>166</td>\n",
              "      <td>1</td>\n",
              "      <td>7.50</td>\n",
              "      <td>0.5</td>\n",
              "      <td>0.5</td>\n",
              "      <td>1.76</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.3</td>\n",
              "      <td>10.56</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>8.966667</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2</td>\n",
              "      <td>2022-01-01 00:25:21</td>\n",
              "      <td>2022-01-01 00:35:23</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.09</td>\n",
              "      <td>1.0</td>\n",
              "      <td>N</td>\n",
              "      <td>114</td>\n",
              "      <td>68</td>\n",
              "      <td>2</td>\n",
              "      <td>8.00</td>\n",
              "      <td>0.5</td>\n",
              "      <td>0.5</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.3</td>\n",
              "      <td>11.80</td>\n",
              "      <td>2.5</td>\n",
              "      <td>0.0</td>\n",
              "      <td>10.033333</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2</td>\n",
              "      <td>2022-01-01 00:36:48</td>\n",
              "      <td>2022-01-01 01:14:20</td>\n",
              "      <td>1.0</td>\n",
              "      <td>4.30</td>\n",
              "      <td>1.0</td>\n",
              "      <td>N</td>\n",
              "      <td>68</td>\n",
              "      <td>163</td>\n",
              "      <td>1</td>\n",
              "      <td>23.50</td>\n",
              "      <td>0.5</td>\n",
              "      <td>0.5</td>\n",
              "      <td>3.00</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.3</td>\n",
              "      <td>30.30</td>\n",
              "      <td>2.5</td>\n",
              "      <td>0.0</td>\n",
              "      <td>37.533333</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2463926</th>\n",
              "      <td>2</td>\n",
              "      <td>2022-01-31 23:36:53</td>\n",
              "      <td>2022-01-31 23:42:51</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.32</td>\n",
              "      <td>NaN</td>\n",
              "      <td>None</td>\n",
              "      <td>90</td>\n",
              "      <td>170</td>\n",
              "      <td>0</td>\n",
              "      <td>8.00</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.5</td>\n",
              "      <td>2.39</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.3</td>\n",
              "      <td>13.69</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>5.966667</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2463927</th>\n",
              "      <td>2</td>\n",
              "      <td>2022-01-31 23:44:22</td>\n",
              "      <td>2022-01-31 23:55:01</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.19</td>\n",
              "      <td>NaN</td>\n",
              "      <td>None</td>\n",
              "      <td>107</td>\n",
              "      <td>75</td>\n",
              "      <td>0</td>\n",
              "      <td>16.80</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.5</td>\n",
              "      <td>4.35</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.3</td>\n",
              "      <td>24.45</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>10.650000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2463928</th>\n",
              "      <td>2</td>\n",
              "      <td>2022-01-31 23:39:00</td>\n",
              "      <td>2022-01-31 23:50:00</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.10</td>\n",
              "      <td>NaN</td>\n",
              "      <td>None</td>\n",
              "      <td>113</td>\n",
              "      <td>246</td>\n",
              "      <td>0</td>\n",
              "      <td>11.22</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.5</td>\n",
              "      <td>2.00</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.3</td>\n",
              "      <td>16.52</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>11.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2463929</th>\n",
              "      <td>2</td>\n",
              "      <td>2022-01-31 23:36:42</td>\n",
              "      <td>2022-01-31 23:48:45</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.92</td>\n",
              "      <td>NaN</td>\n",
              "      <td>None</td>\n",
              "      <td>148</td>\n",
              "      <td>164</td>\n",
              "      <td>0</td>\n",
              "      <td>12.40</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.5</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.3</td>\n",
              "      <td>15.70</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>12.050000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2463930</th>\n",
              "      <td>2</td>\n",
              "      <td>2022-01-31 23:46:00</td>\n",
              "      <td>2022-02-01 00:13:00</td>\n",
              "      <td>NaN</td>\n",
              "      <td>8.94</td>\n",
              "      <td>NaN</td>\n",
              "      <td>None</td>\n",
              "      <td>186</td>\n",
              "      <td>181</td>\n",
              "      <td>0</td>\n",
              "      <td>25.48</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.5</td>\n",
              "      <td>6.28</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.3</td>\n",
              "      <td>35.06</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>27.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>2463931 rows Ã— 20 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a8bccc18-3932-434a-8fc7-fa7f9e95e674')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-a8bccc18-3932-434a-8fc7-fa7f9e95e674 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-a8bccc18-3932-434a-8fc7-fa7f9e95e674');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-fe9b1155-d9ca-4360-9ff4-59b8488cc9db\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-fe9b1155-d9ca-4360-9ff4-59b8488cc9db')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-fe9b1155-d9ca-4360-9ff4-59b8488cc9db button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "  <div id=\"id_7a339517-4aa9-4e79-8917-201711a6c562\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_7a339517-4aa9-4e79-8917-201711a6c562 button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('df');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df"
            }
          },
          "metadata": {},
          "execution_count": 9
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Create new columns for pickup hour and day of week\n",
        "df[\"pickup_day\"] = df[\"tpep_pickup_datetime\"].dt.day_name()\n",
        "df[\"pickup_hour\"] = df[\"tpep_pickup_datetime\"].dt.hour\n",
        "df"
      ],
      "metadata": {
        "id": "d13PYaN2FPFt",
        "outputId": "158c58c3-a4b1-40cf-971c-ad18094e3388",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 444
        }
      },
      "execution_count": 10,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "         VendorID tpep_pickup_datetime tpep_dropoff_datetime  passenger_count  \\\n",
              "0               1  2022-01-01 00:35:40   2022-01-01 00:53:29              2.0   \n",
              "1               1  2022-01-01 00:33:43   2022-01-01 00:42:07              1.0   \n",
              "2               2  2022-01-01 00:53:21   2022-01-01 01:02:19              1.0   \n",
              "3               2  2022-01-01 00:25:21   2022-01-01 00:35:23              1.0   \n",
              "4               2  2022-01-01 00:36:48   2022-01-01 01:14:20              1.0   \n",
              "...           ...                  ...                   ...              ...   \n",
              "2463926         2  2022-01-31 23:36:53   2022-01-31 23:42:51              NaN   \n",
              "2463927         2  2022-01-31 23:44:22   2022-01-31 23:55:01              NaN   \n",
              "2463928         2  2022-01-31 23:39:00   2022-01-31 23:50:00              NaN   \n",
              "2463929         2  2022-01-31 23:36:42   2022-01-31 23:48:45              NaN   \n",
              "2463930         2  2022-01-31 23:46:00   2022-02-01 00:13:00              NaN   \n",
              "\n",
              "         trip_distance  RatecodeID store_and_fwd_flag  PULocationID  \\\n",
              "0                 3.80         1.0                  N           142   \n",
              "1                 2.10         1.0                  N           236   \n",
              "2                 0.97         1.0                  N           166   \n",
              "3                 1.09         1.0                  N           114   \n",
              "4                 4.30         1.0                  N            68   \n",
              "...                ...         ...                ...           ...   \n",
              "2463926           1.32         NaN               None            90   \n",
              "2463927           4.19         NaN               None           107   \n",
              "2463928           2.10         NaN               None           113   \n",
              "2463929           2.92         NaN               None           148   \n",
              "2463930           8.94         NaN               None           186   \n",
              "\n",
              "         DOLocationID  payment_type  ...  mta_tax  tip_amount  tolls_amount  \\\n",
              "0                 236             1  ...      0.5        3.65           0.0   \n",
              "1                  42             1  ...      0.5        4.00           0.0   \n",
              "2                 166             1  ...      0.5        1.76           0.0   \n",
              "3                  68             2  ...      0.5        0.00           0.0   \n",
              "4                 163             1  ...      0.5        3.00           0.0   \n",
              "...               ...           ...  ...      ...         ...           ...   \n",
              "2463926           170             0  ...      0.5        2.39           0.0   \n",
              "2463927            75             0  ...      0.5        4.35           0.0   \n",
              "2463928           246             0  ...      0.5        2.00           0.0   \n",
              "2463929           164             0  ...      0.5        0.00           0.0   \n",
              "2463930           181             0  ...      0.5        6.28           0.0   \n",
              "\n",
              "         improvement_surcharge  total_amount  congestion_surcharge  \\\n",
              "0                          0.3         21.95                   2.5   \n",
              "1                          0.3         13.30                   0.0   \n",
              "2                          0.3         10.56                   0.0   \n",
              "3                          0.3         11.80                   2.5   \n",
              "4                          0.3         30.30                   2.5   \n",
              "...                        ...           ...                   ...   \n",
              "2463926                    0.3         13.69                   NaN   \n",
              "2463927                    0.3         24.45                   NaN   \n",
              "2463928                    0.3         16.52                   NaN   \n",
              "2463929                    0.3         15.70                   NaN   \n",
              "2463930                    0.3         35.06                   NaN   \n",
              "\n",
              "         airport_fee   duration  pickup_day  pickup_hour  \n",
              "0                0.0  17.816667    Saturday            0  \n",
              "1                0.0   8.400000    Saturday            0  \n",
              "2                0.0   8.966667    Saturday            0  \n",
              "3                0.0  10.033333    Saturday            0  \n",
              "4                0.0  37.533333    Saturday            0  \n",
              "...              ...        ...         ...          ...  \n",
              "2463926          NaN   5.966667      Monday           23  \n",
              "2463927          NaN  10.650000      Monday           23  \n",
              "2463928          NaN  11.000000      Monday           23  \n",
              "2463929          NaN  12.050000      Monday           23  \n",
              "2463930          NaN  27.000000      Monday           23  \n",
              "\n",
              "[2463931 rows x 22 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-cc5924d1-f15a-4704-ab83-c205673da17f\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>VendorID</th>\n",
              "      <th>tpep_pickup_datetime</th>\n",
              "      <th>tpep_dropoff_datetime</th>\n",
              "      <th>passenger_count</th>\n",
              "      <th>trip_distance</th>\n",
              "      <th>RatecodeID</th>\n",
              "      <th>store_and_fwd_flag</th>\n",
              "      <th>PULocationID</th>\n",
              "      <th>DOLocationID</th>\n",
              "      <th>payment_type</th>\n",
              "      <th>...</th>\n",
              "      <th>mta_tax</th>\n",
              "      <th>tip_amount</th>\n",
              "      <th>tolls_amount</th>\n",
              "      <th>improvement_surcharge</th>\n",
              "      <th>total_amount</th>\n",
              "      <th>congestion_surcharge</th>\n",
              "      <th>airport_fee</th>\n",
              "      <th>duration</th>\n",
              "      <th>pickup_day</th>\n",
              "      <th>pickup_hour</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>2022-01-01 00:35:40</td>\n",
              "      <td>2022-01-01 00:53:29</td>\n",
              "      <td>2.0</td>\n",
              "      <td>3.80</td>\n",
              "      <td>1.0</td>\n",
              "      <td>N</td>\n",
              "      <td>142</td>\n",
              "      <td>236</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>0.5</td>\n",
              "      <td>3.65</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.3</td>\n",
              "      <td>21.95</td>\n",
              "      <td>2.5</td>\n",
              "      <td>0.0</td>\n",
              "      <td>17.816667</td>\n",
              "      <td>Saturday</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1</td>\n",
              "      <td>2022-01-01 00:33:43</td>\n",
              "      <td>2022-01-01 00:42:07</td>\n",
              "      <td>1.0</td>\n",
              "      <td>2.10</td>\n",
              "      <td>1.0</td>\n",
              "      <td>N</td>\n",
              "      <td>236</td>\n",
              "      <td>42</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>0.5</td>\n",
              "      <td>4.00</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.3</td>\n",
              "      <td>13.30</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>8.400000</td>\n",
              "      <td>Saturday</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2</td>\n",
              "      <td>2022-01-01 00:53:21</td>\n",
              "      <td>2022-01-01 01:02:19</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.97</td>\n",
              "      <td>1.0</td>\n",
              "      <td>N</td>\n",
              "      <td>166</td>\n",
              "      <td>166</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>0.5</td>\n",
              "      <td>1.76</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.3</td>\n",
              "      <td>10.56</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>8.966667</td>\n",
              "      <td>Saturday</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2</td>\n",
              "      <td>2022-01-01 00:25:21</td>\n",
              "      <td>2022-01-01 00:35:23</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.09</td>\n",
              "      <td>1.0</td>\n",
              "      <td>N</td>\n",
              "      <td>114</td>\n",
              "      <td>68</td>\n",
              "      <td>2</td>\n",
              "      <td>...</td>\n",
              "      <td>0.5</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.3</td>\n",
              "      <td>11.80</td>\n",
              "      <td>2.5</td>\n",
              "      <td>0.0</td>\n",
              "      <td>10.033333</td>\n",
              "      <td>Saturday</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2</td>\n",
              "      <td>2022-01-01 00:36:48</td>\n",
              "      <td>2022-01-01 01:14:20</td>\n",
              "      <td>1.0</td>\n",
              "      <td>4.30</td>\n",
              "      <td>1.0</td>\n",
              "      <td>N</td>\n",
              "      <td>68</td>\n",
              "      <td>163</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>0.5</td>\n",
              "      <td>3.00</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.3</td>\n",
              "      <td>30.30</td>\n",
              "      <td>2.5</td>\n",
              "      <td>0.0</td>\n",
              "      <td>37.533333</td>\n",
              "      <td>Saturday</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2463926</th>\n",
              "      <td>2</td>\n",
              "      <td>2022-01-31 23:36:53</td>\n",
              "      <td>2022-01-31 23:42:51</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.32</td>\n",
              "      <td>NaN</td>\n",
              "      <td>None</td>\n",
              "      <td>90</td>\n",
              "      <td>170</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.5</td>\n",
              "      <td>2.39</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.3</td>\n",
              "      <td>13.69</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>5.966667</td>\n",
              "      <td>Monday</td>\n",
              "      <td>23</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2463927</th>\n",
              "      <td>2</td>\n",
              "      <td>2022-01-31 23:44:22</td>\n",
              "      <td>2022-01-31 23:55:01</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.19</td>\n",
              "      <td>NaN</td>\n",
              "      <td>None</td>\n",
              "      <td>107</td>\n",
              "      <td>75</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.5</td>\n",
              "      <td>4.35</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.3</td>\n",
              "      <td>24.45</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>10.650000</td>\n",
              "      <td>Monday</td>\n",
              "      <td>23</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2463928</th>\n",
              "      <td>2</td>\n",
              "      <td>2022-01-31 23:39:00</td>\n",
              "      <td>2022-01-31 23:50:00</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.10</td>\n",
              "      <td>NaN</td>\n",
              "      <td>None</td>\n",
              "      <td>113</td>\n",
              "      <td>246</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.5</td>\n",
              "      <td>2.00</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.3</td>\n",
              "      <td>16.52</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>11.000000</td>\n",
              "      <td>Monday</td>\n",
              "      <td>23</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2463929</th>\n",
              "      <td>2</td>\n",
              "      <td>2022-01-31 23:36:42</td>\n",
              "      <td>2022-01-31 23:48:45</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.92</td>\n",
              "      <td>NaN</td>\n",
              "      <td>None</td>\n",
              "      <td>148</td>\n",
              "      <td>164</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.5</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.3</td>\n",
              "      <td>15.70</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>12.050000</td>\n",
              "      <td>Monday</td>\n",
              "      <td>23</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2463930</th>\n",
              "      <td>2</td>\n",
              "      <td>2022-01-31 23:46:00</td>\n",
              "      <td>2022-02-01 00:13:00</td>\n",
              "      <td>NaN</td>\n",
              "      <td>8.94</td>\n",
              "      <td>NaN</td>\n",
              "      <td>None</td>\n",
              "      <td>186</td>\n",
              "      <td>181</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.5</td>\n",
              "      <td>6.28</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.3</td>\n",
              "      <td>35.06</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>27.000000</td>\n",
              "      <td>Monday</td>\n",
              "      <td>23</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>2463931 rows Ã— 22 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-cc5924d1-f15a-4704-ab83-c205673da17f')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-cc5924d1-f15a-4704-ab83-c205673da17f button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-cc5924d1-f15a-4704-ab83-c205673da17f');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-78075054-afe7-48fa-a835-907f551e44e1\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-78075054-afe7-48fa-a835-907f551e44e1')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-78075054-afe7-48fa-a835-907f551e44e1 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "  <div id=\"id_51f40000-8c66-4fb2-9c5b-b202b8df7492\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_51f40000-8c66-4fb2-9c5b-b202b8df7492 button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('df');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df"
            }
          },
          "metadata": {},
          "execution_count": 10
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Create a lineplot displaying the number of trips by pickup hour\n",
        "pickup_hour_count = df[\"pickup_hour\"].value_counts().reset_index()\n",
        "pickup_hour_count.columns = [\"pickup_hour\", \"count\"]\n",
        "sns.lineplot(x=\"pickup_hour\", y=\"count\", data=pickup_hour_count)\n",
        "plt.show()\n",
        "busiest_hour = pickup_hour_count.loc[pickup_hour_count['count'].idxmax()]\n",
        "print(f\"Busiest hour: {busiest_hour['pickup_hour']} with {busiest_hour['count']} trips\")"
      ],
      "metadata": {
        "id": "-Bf7bnS9uU-h",
        "outputId": "4e55da33-db2d-43a8-b3d6-6771c0baaf24",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 467
        }
      },
      "execution_count": 11,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Busiest hour: 18 with 177696 trips\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Create a lineplot displaying the number of trips by pickup day\n",
        "pickup_day_count = df[\"pickup_day\"].value_counts().reset_index()\n",
        "pickup_day_count.columns = [\"pickup_day\", \"count\"]\n",
        "sns.lineplot(x=\"pickup_day\", y=\"count\", data=pickup_day_count)\n",
        "plt.show()\n",
        "busiest_day = pickup_day_count.loc[pickup_day_count['count'].idxmax()]\n",
        "print(f\"Busiest day: {busiest_day['pickup_day']} with {busiest_day['count']} trips\")"
      ],
      "metadata": {
        "id": "iGjHC9lHuO8r",
        "outputId": "6ad44d82-6efb-43f7-a89f-f3723f4eaa81",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 467
        }
      },
      "execution_count": 12,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Busiest day: Monday with 374034 trips\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "In the realm of machine learning, understanding the relationships between variables is crucial for building accurate and effective predictive models. One powerful tool for exploring these relationships is the correlation matrix. A correlation matrix provides a comprehensive overview of the pairwise correlations between variables in a dataset, allowing practitioners to quantify and visualize the strength and direction of these associations. This matrix is an essential component of exploratory data analysis and offers several key benefits:\n",
        "\n",
        "1. Relationship Assessment: The correlation matrix provides a quantitative measure of the relationship between variables. By calculating correlation coefficients, typically using methods like Pearson's correlation coefficient, analysts can determine if variables are positively correlated (increase together), negatively correlated (one increases as the other decreases), or uncorrelated (no systematic relationship). These measures offer insights into the direction and strength of the relationships, helping to identify important variables that may influence the target variable.\n",
        "\n",
        "2. Feature Selection: Correlation matrices are invaluable in feature selection, which involves identifying the most relevant variables for building predictive models. By examining the correlations between the target variable and other features, analysts can identify highly correlated variables that may be strong predictors. This knowledge enables informed decisions regarding which variables to include in the model, potentially reducing dimensionality, enhancing model efficiency, and preventing issues such as multicollinearity.\n",
        "\n",
        "3. Multicollinearity Detection: Multicollinearity occurs when two or more independent variables in a model are highly correlated. This can lead to problems such as instability in coefficient estimates, difficulty in interpreting feature importance, and reduced model robustness. By examining the correlation matrix, analysts can identify highly correlated variables and make informed decisions about which ones to include or exclude to mitigate multicollinearity. Removing redundant variables improves model interpretability and generalization.\n",
        "\n",
        "Here is your task:\n",
        "\n",
        "  1. Compute a correlation matrix between the variables 'trip_distance', 'fare_amount', 'tip_amount', 'total_amount', 'trip_duration' and use Seaborn to create a heatmap of the results. Which variables are strongly correlated?"
      ],
      "metadata": {
        "id": "yVQLUFXPGe4e"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Compute correlation matrix of numerical variables\n",
        "corr_data = df[[\"trip_distance\", \"fare_amount\", \"tip_amount\", \"total_amount\", \"duration\"]]\n",
        "matrix = corr_data.corr()\n",
        "print(matrix)\n",
        "# Create a heatmap of the correlation matrix\n",
        "sns.heatmap(matrix, cmap=\"Greens\", annot=True)\n",
        "plt.show()\n",
        "print(\"Strong positive correlation: fare_amount and total_amount\")"
      ],
      "metadata": {
        "id": "XCY8MrLAppQz",
        "outputId": "64f2ae7d-c1c8-4fb5-b9d6-513deb0a59db",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 636
        }
      },
      "execution_count": 13,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "               trip_distance  fare_amount  tip_amount  total_amount  duration\n",
            "trip_distance       1.000000     0.000406    0.005931      0.000505  0.001458\n",
            "fare_amount         0.000406     1.000000    0.024442      0.999875  0.008365\n",
            "tip_amount          0.005931     0.024442    1.000000      0.038569  0.086403\n",
            "total_amount        0.000505     0.999875    0.038569      1.000000  0.009962\n",
            "duration            0.001458     0.008365    0.086403      0.009962  1.000000\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Strong positive correlation: fare_amount and total_amount\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Pairplots, also known as scatterplot matrices, allow for the visualization of pairwise relationships between multiple variables simultaneously. Each subplot in the pairplot represents the scatterplot of one variable against another. Pairplots offer several advantages in EDA:\n",
        "\n",
        "  - Variable Relationships: Pairplots enable analysts to explore the relationships between variables, revealing patterns such as linear or nonlinear correlations, clusters, or other associations. These visual cues guide further analysis, feature selection, or modeling decisions.\n",
        "\n",
        "  - Multivariate Analysis: Pairplots help identify multivariate dependencies and interactions, highlighting how different variables jointly influence one another. This is particularly valuable in identifying potential confounding factors or discovering hidden interactions that may not be apparent when considering variables in isolation.\n",
        "\n",
        "  - Outlier Detection: Pairplots can reveal potential outliers by showing data points that deviate significantly from the general pattern observed between variables. Outliers can indicate data anomalies or influential observations that may impact model performance.\n",
        "\n",
        "  - Feature Importance: Pairplots provide an intuitive representation of the relative importance of different features. Variables exhibiting strong correlations or clear patterns may be more relevant for predictive modeling or feature selection.\n",
        "\n",
        "  - Data Quality: Pairplots can help identify data quality issues, such as data entry errors or measurement inconsistencies. Patterns that do not align with expectations or exhibit unusual trends may signal data problems that require further investigation or preprocessing.\n",
        "\n",
        "Here is your task:\n",
        "\n",
        "  1. Create a [pairplot matrix](https://seaborn.pydata.org/generated/seaborn.pairplot.html) using Seaborn to observation the relationship between the following variables: trip_distance, fare_amount, tip_amount, total_amount, trip_duration. Note, pairplots can be memory intensive. Try sampling the dataset using the [sample method](https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.sample.html) in Pandas. Which variables appear to have a strong relationship? Which variables seem to have no relationship?"
      ],
      "metadata": {
        "id": "Eh6TJ8iRJHDm"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Create a scatter plot matrix of numerical variables. If memory issues try the df.sample method.\n",
        "df_sample = corr_data.sample(n=1000, random_state=42)\n",
        "sns.pairplot(df_sample)\n",
        "plt.show()\n",
        "print(\"Strong relationship: fare_amount and total_amount\")\n",
        "print(\"No relationship: duration and tip_amount\")"
      ],
      "metadata": {
        "id": "l_v24Ym3p8A-",
        "outputId": "ce23ef29-7ab5-42a7-efb1-1246e85b1138",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        }
      },
      "execution_count": 14,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1250x1250 with 30 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Strong relationship: fare_amount and total_amount\n",
            "No relationship: duration and tip_amount\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "A count plot is a type of categorical plot that displays the number of occurrences of each category in a dataset. It is particularly useful for visualizing the distribution and frequency of categorical variables. Here are some key uses and benefits of count plots:\n",
        "\n",
        "  - Categorical Variable Exploration: Count plots provide a quick and concise summary of the distribution of categorical variables. They allow analysts to understand the frequency or count of each category, revealing the proportions and imbalances within the dataset. This information is crucial for gaining insights into the composition and characteristics of categorical variables.\n",
        "\n",
        "  - Class Imbalance Assessment: In classification tasks, count plots help assess the balance or imbalance of different target classes. It provides a visual representation of the distribution of classes, highlighting any significant discrepancies in the sample sizes across categories. Identifying imbalanced classes is important in machine learning as it can affect model performance and bias the predictions towards the majority class.\n",
        "\n",
        "  - Data Quality Inspection: Count plots can be utilized to detect data quality issues in categorical variables. It allows analysts to identify unexpected or erroneous categories that may indicate data entry errors, missing data, or inconsistencies in the dataset. By observing the counts for each category, anomalies or discrepancies can be easily spotted, enabling data cleaning or further investigation if necessary.\n",
        "\n",
        "  - Feature Importance Evaluation: Count plots can provide insights into the importance or relevance of different categorical features in relation to the target variable. By visualizing the distribution of categories within each class or target level, analysts can determine which categories are more prevalent or have higher frequencies for specific outcomes. This understanding helps in assessing the discriminatory power of categorical features and their potential impact on predictive models.\n",
        "\n",
        "Here is your task:\n",
        "\n",
        "  1. Use Seaborn to create a [countplot](https://seaborn.pydata.org/generated/seaborn.countplot.html) for the variables PULocationID, and DOLocationID. Keep only the top 15 pick-up and drop-off locations. What's the most popular pick-up location?"
      ],
      "metadata": {
        "id": "OA1p83hesFkH"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Create a Seaborn countplot for PULocationID and DOLocationID. Only plot the top 15 categories by value counts.\n",
        "top15_PULocationID = df[\"PULocationID\"].value_counts().nlargest(15).index\n",
        "top15_DOLocationID = df[\"DOLocationID\"].value_counts().nlargest(15).index\n",
        "top15_df = df[df[\"PULocationID\"].isin(top15_PULocationID) | df[\"DOLocationID\"].isin(top15_DOLocationID)]\n",
        "sns.countplot(x = \"PULocationID\", data = top15_df, order = top15_PULocationID)\n",
        "plt.show()\n",
        "sns.countplot(x = \"DOLocationID\", data = top15_df, order = top15_DOLocationID)\n",
        "plt.show()\n",
        "most_popular_pickup = df[\"PULocationID\"].value_counts().idxmax()\n",
        "most_popular_dropoff = df[\"DOLocationID\"].value_counts().idxmax()\n",
        "print(f\"Most popular pick-up location: {most_popular_pickup}\")\n",
        "print(f\"Most popular drop-off location: {most_popular_dropoff}\")"
      ],
      "metadata": {
        "id": "eigDjtkTruQD",
        "outputId": "dc1e22ab-51e2-4d91-f78c-8e7222a40b85",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 916
        }
      },
      "execution_count": 15,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Most popular pick-up location: 237\n",
            "Most popular drop-off location: 236\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "A box plot, also known as a box-and-whisker plot, is a powerful visualization tool for displaying the distribution, variability, and outliers within a numerical dataset. It provides a concise summary of key statistical measures and offers several important uses:\n",
        "\n",
        "  - Data Distribution and Skewness: Box plots offer a visual representation of the distribution of numerical data, providing insights into its central tendency, spread, and skewness. The box represents the interquartile range (IQR), which contains the middle 50% of the data, with the median indicated by a horizontal line within the box. By observing the length and symmetry of the box, analysts can assess whether the data is skewed or symmetrically distributed.\n",
        "\n",
        "  - Outlier Detection: Box plots are highly effective in identifying outliers, which are data points that deviate significantly from the rest of the distribution. The whiskers of the plot extend to the minimum and maximum non-outlier values, with any data points beyond the whiskers considered as potential outliers. Outliers can indicate data errors, anomalies, or important observations requiring further investigation.\n",
        "\n",
        "  - Comparing Groups or Categories: Box plots are useful for comparing the distributions of numerical data across different groups or categories. By creating side-by-side or grouped box plots, analysts can easily compare the central tendencies, spreads, and shapes of distributions between different groups. This allows for the identification of differences, similarities, or patterns within the data.\n",
        "\n",
        "  - Variability and Spread: Box plots provide insights into the variability and spread of the data. The length of the box indicates the spread of the middle 50% of the data, while the whiskers show the range of non-outlier values. By comparing the lengths of the boxes and whiskers, analysts can assess the relative variability between different groups or categories, aiding in the understanding of the data's dispersion.\n",
        "\n",
        "  - Skewedness and Symmetry: Box plots offer a visual assessment of the skewness or symmetry of the data distribution. A symmetrical distribution is represented by a box plot with an equal length on both sides of the median, while a skewed distribution is indicated by a longer box on one side. This visual cue helps in understanding the shape and characteristics of the data, assisting in further analysis and modeling decisions.\n",
        "\n",
        "  - Data Range and Quartiles: Box plots display the quartiles of the data distribution. The lower quartile (Q1) represents the 25th percentile, the upper quartile (Q3) represents the 75th percentile, and the interquartile range (IQR) is the range between Q1 and Q3. These quartiles provide a summary of the range and spread of the central portion of the data, aiding in the understanding of the data's variability and dispersion.\n",
        "\n",
        "Your task is:\n",
        "\n",
        "  1. Use Seaborn's [boxplot](https://seaborn.pydata.org/generated/seaborn.boxplot.html) to discern the relationship between payment_type and total_amount. Does anything look weird? Can you explain what's going on?"
      ],
      "metadata": {
        "id": "Bbl-WZtctVbH"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 18,
      "metadata": {
        "id": "fM_2IGKrk8Vy",
        "outputId": "25f6b2ad-81dc-4288-c01a-f1adc84c9724",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 898
        }
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "There is an extreme outlier for payment_type 4, which may have been a billed error. There are also several negative total_amounts in payment_type 2 which may indicate refunds or errors\n"
          ]
        }
      ],
      "source": [
        "# Create a box plot of total amount by payment type. Do you see anything odd?\n",
        "sns.boxplot(x = \"payment_type\", y = \"total_amount\", data = df)\n",
        "plt.show()\n",
        "# Remove extreme outliers\n",
        "Q1 = df['total_amount'].quantile(0.25)\n",
        "Q3 = df['total_amount'].quantile(0.75)\n",
        "IQR = Q3 - Q1\n",
        "lower_bound = Q1 - 1.5 * IQR\n",
        "upper_bound = Q3 + 1.5 * IQR\n",
        "df_no_outliers = df[(df['total_amount'] >= lower_bound) & (df['total_amount'] <= upper_bound)]\n",
        "sns.boxplot(x=\"payment_type\", y=\"total_amount\", data=df_no_outliers)\n",
        "plt.show()\n",
        "print(\"There is an extreme outlier for payment_type 4, which may have been a billed error. There are also several negative total_amounts in payment_type 2 which may indicate refunds or errors\")"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "A histogram is a graphical representation that displays the distribution of a continuous or discrete numerical variable. It provides insights into the underlying data distribution and helps uncover patterns, frequencies, and ranges within the dataset. Here are some key uses and benefits of histogram plots:\n",
        "\n",
        "  - Data Distribution: Histograms allow analysts to visualize the shape, central tendency, and spread of the data. They provide an overview of the data distribution, helping to identify if it follows a particular pattern, such as a normal distribution, skewed distribution, bimodal distribution, or multimodal distribution. Understanding the data distribution aids in selecting appropriate analysis techniques and understanding the characteristics of the data.\n",
        "\n",
        "  - Frequency Analysis: Histograms display the frequency or count of data points within predefined bins or intervals along the x-axis. By observing the height or count of each bin, analysts can identify the frequency of occurrence for different values or value ranges. This information helps assess the concentration of data points and identify peaks or modes in the distribution.\n",
        "\n",
        "  - Outlier Detection: Histograms can assist in identifying outliers, which are data points that significantly deviate from the rest of the distribution. Outliers may indicate data errors, unusual observations, or important anomalies requiring further investigation. By examining the tails or extreme values in the histogram, analysts can identify potential outliers that may require additional scrutiny.\n",
        "\n",
        "  - Data Range and Spread: Histograms provide insights into the range and spread of the data. The x-axis represents the variable's values, while the y-axis represents the frequency or count of occurrences. By observing the width and span of the histogram, analysts can assess the data's range and variability. This information helps understand the data's spread and aids in subsequent analysis or decision-making processes.\n",
        "\n",
        "  - Feature Engineering: Histograms can guide feature engineering processes by informing appropriate transformations, binning strategies, or encoding techniques for numerical variables. They assist in identifying nonlinear relationships or determining optimal cut-off points for converting continuous variables into categorical ones. Histograms also help identify data skewness and guide transformation methods to address the skew if necessary.\n",
        "\n",
        "  - Data Quality Inspection: Histograms can be useful in detecting data quality issues or anomalies. Unusual spikes, gaps, or unexpected patterns in the histogram may indicate data entry errors, measurement inconsistencies, or missing data. By observing the histogram, analysts can identify potential data quality issues that require further investigation or preprocessing.\n",
        "\n",
        "Your task is:\n",
        "\n",
        "  1. Use Seaborn's [histplot](https://seaborn.pydata.org/generated/seaborn.histplot.html) to explore the data distributions for fare_amount, trip_distance, and extra. Use kernel density estimators to better visualize the distribution. Use sampling if you run into any memory issues."
      ],
      "metadata": {
        "id": "CnV0dIHquPtf"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Explore data distributions for 'fare_amount', 'trip_distance' and 'extra' using Seaborn's histplot. Sample the data if you run into memory issues.\n",
        "df_sample = df.sample(n=10000, random_state=42)\n",
        "plt.figure(figsize=(18, 5))\n",
        "plt.subplot(1, 3, 1)\n",
        "sns.histplot(df_sample[\"fare_amount\"], bins = 50)\n",
        "plt.subplot(1, 3, 2)\n",
        "sns.histplot(df_sample['trip_distance'], bins = 50)\n",
        "plt.subplot(1, 3, 3)\n",
        "sns.histplot(df_sample['extra'], bins = 50)\n",
        "plt.show()"
      ],
      "metadata": {
        "id": "8HI3uXHCyI_B",
        "outputId": "91c348b9-e5e6-4e02-88c4-0c4831850072",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 465
        }
      },
      "execution_count": 23,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1800x500 with 3 Axes>"
            ],
            "image/png": "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KkrR0dEyDEOSdPr0aTVv3lyTJk3S8ePHddddd0mSmjRpIjc3Nz3++OOSfu25CQkJGjVqlJo1a6bo6GhJ0syZM9WxY0c1bNhQoaGh+vOf/6wzZ864pG6gpmM4DtQic+bM0dSpU9W8eXOdPHlSu3fv1tmzZzVmzBjt2bNHqampcnd31+9//3sVFxc73XfChAl69tlndfjwYUVHR2vx4sWaNGmSXn75ZR0+fFivvPKKXnzxRS1atKhCuTRu3FjJyck6dOiQ5syZo3fffVezZs1yijl69Kg+//xzrVu3Th999JHef/99xcTE6Pvvv9eWLVv02muvaeLEidq5c6ekX58sPPDAAzp9+rS2bNmilJQUfffdd3rooYeu+mO1aNEiNWzYUDt37tT06dM1depUpaSkSPr1JeWStHDhQvPjCABAZZgzZ47sdruGDx+ukydP6uTJkwoNDZX0ay9+9dVXdfjwYXXq1KnU+6empurw4cPavHmzPvroI33yySeaMmVKhR577Nix2rJliz799FNt2LBBmzdv1r///e8y4//5z39q1qxZ+tvf/qZvv/1WK1euVMeOHSVJn3zyiZo3b66pU6eadUjS+fPnFRkZqTVr1ujAgQMaMWKEHnvsMe3atcvp2OX14eLiYg0YMEBffvmlPvzwQx06dEivvvqqPDw8JP36/KF///4aPHiw9u3bp2XLlmnbtm1KSEio0McBAICaKCkpSX//+9+1YMECHTx4UKNHj9ajjz6qrVu3atGiRdq9e7fmzp0rSRo5cqRuvPFGTZo0SaGhofrnP/8pScrMzNTJkyc1Z84c87iLFi2Sp6envvzySy1YsECS5O7urrlz5+rgwYNatGiRNm3apHHjxlV/0UBtYACoVWbNmmWEhYWVuf7f//7XkGTs37/fMAzDOHbsmCHJmD17tlNc69atjSVLljjtmzZtmmG3268pr9dff92IjIw0b7/00ktGgwYNDIfDYe6Ljo42WrZsaRQVFZn72rZtayQlJRmGYRgbNmwwPDw8jKysLHP94MGDhiRj165dhmEYxrBhw4wHHnjA6bGfffZZ48477zRv33nnncbtt9/uFNOjRw9j/Pjx5m1JxooVK66pVgAAynPnnXcazz77rHn7X//6lyHJWLlypVPcSy+9ZHTu3Nm8PWzYMMPf3984e/asuW/+/PlGo0aNnHpnaX7++WfD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\n"
          },
          "metadata": {}
        }
      ]
    }
  ]
}
